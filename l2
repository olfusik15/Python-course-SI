1) Funkcje sortujące z listy 1 zmienić na potrzeby zadania i opakować w nowe funkcje, które mają za zadanie znaleźć 3 pierwsze wartości w strumieniu danych, które są większe niż zadana wartość progowa i zwrócić ich indeksy. 
Wartość progowa jest podana na wejściu do funkcji opakowującej. Kolejność zwracanych indeksów ma być podyktowana wielkością wartości. Większe najpierw.
Pracujcie z gitem, proponuję zrobić osobnego brancha, nazwać go Onsets i w nim pracować. Na koniec - jak poprzednio - wysłać na repozytorium remote i wystawić pull request do mojego repozytorium, z którego pierwotnie forkowaliście. Nie akceptuję plików dodanych do gita przez „upload”. Wysyłanie plików na wasze remote repo odbywa się poprzez git push.
Przykład wejścia ([9,1,1,1,0,0,0,8,10,11,14,2132323,24234524], 2) - strumień danych, wartość progowa
Oczekiwane wyjście 8,0,7 (trzy pierwsze wartości, które przekraczają znajdują się pod indeksami 0, 7 i 8. Największą z nich wartość ma ten pod indeksem 8, następnie 0, następnie 7).
(5pkt)
2) Zoptymalizować pod kątem obliczeniowym. Jeśli jakieś obliczenia są zbędne do wykonania zadania- pominąć. (2pkt)
3) Zmierzyć czasy znajdowania tychże wartości przez poszczególne algorytmy. Porównać dla różnych zestawów danych. Wyciągnąć (dla siebie) wnioski.
(3pkt)
